//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DetectEncoding.constant.texts {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource_en_US {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource_en_US() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DetectEncoding.constant.texts.Resource_en-US", typeof(Resource_en_US).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Path of file to analyze.
        /// </summary>
        internal static string parserOptFileDesc {
            get {
                return ResourceManager.GetString("parserOptFileDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Target file for conversion. If omitted, the file will look like [Input file name]-Out[Input file extension]. If equal to &quot;SAME_AS_INPUT&quot; then same file as -f option.
        /// </summary>
        internal static string parserOptOutputFileDesc {
            get {
                return ResourceManager.GetString("parserOptOutputFileDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adjusts the number of items displayed. 0: everything is displayed (as if -s absent), 1: just processing lines, 2: nothing is displayed.
        /// </summary>
        internal static string parserOptSilenceLevelDesc {
            get {
                return ResourceManager.GetString("parserOptSilenceLevelDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Converts the encoding of the analyzed file into a target encoding: {0}. Conversion is only possible if the source encoding has been detected..
        /// </summary>
        internal static string parserOptTargetEncDesc {
            get {
                return ResourceManager.GetString("parserOptTargetEncDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Converts the end of line character : {0}. Conversion is only possible if the source encoding has been detected..
        /// </summary>
        internal static string parserOptTargetEolDesc {
            get {
                return ResourceManager.GetString("parserOptTargetEolDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error in the input options of the program. Options -{0} and -{1} cannot be used at the same time..
        /// </summary>
        internal static string parserParseErrorSandPin {
            get {
                return ResourceManager.GetString("parserParseErrorSandPin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The end of line character &apos;{0}&apos; does not exist. Type of possible: {1}.
        /// </summary>
        internal static string parserParseTrtEolNotExistTxt {
            get {
                return ResourceManager.GetString("parserParseTrtEolNotExistTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The file {0} does not exist.
        /// </summary>
        internal static string parserParseTrtFileNotFoundTxt {
            get {
                return ResourceManager.GetString("parserParseTrtFileNotFoundTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The -s option must be an integer from 0 to 2. &apos;{0}&apos; provides..
        /// </summary>
        internal static string parserParseTrtSilenceLvlWrontTxt {
            get {
                return ResourceManager.GetString("parserParseTrtSilenceLvlWrontTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Indicates a template for displaying treatments. Ex: [I_ENC] to display the encoding of the input file. Disable original standard output.
        /// </summary>
        internal static string parserPatternedOutputDesc {
            get {
                return ResourceManager.GetString("parserPatternedOutputDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  More help on http://wolfaryx.fr/?p=3041.
        /// </summary>
        internal static string programMoreHelpOn {
            get {
                return ResourceManager.GetString("programMoreHelpOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  No encoding found.
        /// </summary>
        internal static string programNoEncodingFound {
            get {
                return ResourceManager.GetString("programNoEncodingFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  by Aryx - Wolfaryx informatique -.
        /// </summary>
        internal static string programShowHeaderAuthor {
            get {
                return ResourceManager.GetString("programShowHeaderAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à  Encoding detection based on AutoIt Consulting work:.
        /// </summary>
        internal static string programShowHeaderDisc {
            get {
                return ResourceManager.GetString("programShowHeaderDisc", resourceCulture);
            }
        }
    }
}
